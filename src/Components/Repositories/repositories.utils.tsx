import React from 'react';

const TypescriptIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path
      id='plain'
      d='M2,63.91v62.5H127V1.41H2Zm100.73-5a15.56,15.56,0,0,1,7.82,4.5,20.58,20.58,0,0,1,3,4c0,.16-5.4,3.81-8.69,5.85-.12.08-.6-.44-1.13-1.23a7.09,7.09,0,0,0-5.87-3.53c-3.79-.26-6.23,1.73-6.21,5a4.58,4.58,0,0,0,.54,2.34c.83,1.73,2.38,2.76,7.24,4.86,8.95,3.85,12.78,6.39,15.16,10,2.66,4,3.25,10.46,1.45,15.24-2,5.2-6.9,8.73-13.83,9.9a38.32,38.32,0,0,1-9.52-.1A23,23,0,0,1,80,109.19c-1.15-1.27-3.39-4.58-3.25-4.82a9.34,9.34,0,0,1,1.15-.73L82.5,101l3.59-2.08.75,1.11a16.78,16.78,0,0,0,4.74,4.54c4,2.1,9.46,1.81,12.16-.62a5.43,5.43,0,0,0,.69-6.92c-1-1.39-3-2.56-8.59-5-6.45-2.78-9.23-4.5-11.77-7.24a16.48,16.48,0,0,1-3.43-6.25,25,25,0,0,1-.22-8c1.33-6.23,6-10.58,12.82-11.87A31.66,31.66,0,0,1,102.73,58.93ZM73.39,64.15l0,5.12H57.16V115.5H45.65V69.26H29.38v-5a49.19,49.19,0,0,1,.14-5.16c.06-.08,10-.12,22-.1L73.33,59Z'
    />
  </svg>
);

const PythonIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M49.33 62h29.159c8.117 0 14.511-6.868 14.511-15.019v-27.798c0-7.912-6.632-13.856-14.555-15.176-5.014-.835-10.195-1.215-15.187-1.191-4.99.023-9.612.448-13.805 1.191-12.355 2.181-14.453 6.751-14.453 15.176v10.817h29v4h-40.224000000000004c-8.484 0-15.914 5.108-18.237 14.811-2.681 11.12-2.8 17.919 0 29.53 2.075 8.642 7.03 14.659 15.515 14.659h9.946v-13.048c0-9.637 8.428-17.952 18.33-17.952zm-1.838-39.11c-3.026 0-5.478-2.479-5.478-5.545 0-3.079 2.451-5.581 5.478-5.581 3.015 0 5.479 2.502 5.479 5.581-.001 3.066-2.465 5.545-5.479 5.545zM122.281 48.811c-2.098-8.448-6.103-14.811-14.599-14.811h-10.682v12.981c0 10.05-8.794 18.019-18.511 18.019h-29.159c-7.988 0-14.33 7.326-14.33 15.326v27.8c0 7.91 6.745 12.564 14.462 14.834 9.242 2.717 17.994 3.208 29.051 0 7.349-2.129 14.487-6.411 14.487-14.834v-11.126h-29v-4h43.682c8.484 0 11.647-5.776 14.599-14.66 3.047-9.145 2.916-17.799 0-29.529zm-41.955 55.606c3.027 0 5.479 2.479 5.479 5.547 0 3.076-2.451 5.579-5.479 5.579-3.015 0-5.478-2.502-5.478-5.579 0-3.068 2.463-5.547 5.478-5.547z' />
  </svg>
);

const HaskellIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M0,110.2L30.1,65L0,19.9h22.6L52.7,65l-30.1,45.1H0z' />
    <path d='M30.1,110.2L60.2,65L30.1,19.9h22.6l60.2,90.3H90.4L71.5,81.9l-18.8,28.2H30.1z' />
    <path d='m102.9 83.8-10-15.1h35.1v15.1h-25.1zm-15.1-22.5-10-15.1h50.2v15.1h-40.2z' />
  </svg>
);

const BashIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <rect x='-143.76' y='4.24' width='119.53' height='119.53' />
    <path d='M109.01,28.64L71.28,6.24C69.03,4.91,66.51,4.24,64,4.24s-5.03,0.67-7.28,2.01l-37.74,22.4 c-4.5,2.67-7.28,7.61-7.28,12.96v44.8c0,5.35,2.77,10.29,7.28,12.96l37.73,22.4c2.25,1.34,4.76,2,7.28,2c2.51,0,5.03-0.67,7.28-2 l37.74-22.4c4.5-2.67,7.28-7.62,7.28-12.96V41.6C116.29,36.26,113.52,31.31,109.01,28.64z M79.79,98.59l0.06,3.22 c0,0.39-0.25,0.83-0.55,0.99l-1.91,1.1c-0.3,0.15-0.56-0.03-0.56-0.42l-0.03-3.17c-1.63,0.68-3.29,0.84-4.34,0.42 c-0.2-0.08-0.29-0.37-0.21-0.71l0.69-2.91c0.06-0.23,0.18-0.46,0.34-0.6c0.06-0.06,0.12-0.1,0.18-0.13 c0.11-0.06,0.22-0.07,0.31-0.03c1.14,0.38,2.59,0.2,3.99-0.5c1.78-0.9,2.97-2.72,2.95-4.52c-0.02-1.64-0.9-2.31-3.05-2.33 c-2.74,0.01-5.3-0.53-5.34-4.57c-0.03-3.32,1.69-6.78,4.43-8.96l-0.03-3.25c0-0.4,0.24-0.84,0.55-1l1.85-1.18 c0.3-0.15,0.56,0.04,0.56,0.43l0.03,3.25c1.36-0.54,2.54-0.69,3.61-0.44c0.23,0.06,0.34,0.38,0.24,0.75l-0.72,2.88 c-0.06,0.22-0.18,0.44-0.33,0.58c-0.06,0.06-0.13,0.11-0.19,0.14c-0.1,0.05-0.19,0.06-0.28,0.05c-0.49-0.11-1.65-0.36-3.48,0.56 c-1.92,0.97-2.59,2.64-2.58,3.88c0.02,1.48,0.77,1.93,3.39,1.97c3.49,0.06,4.99,1.58,5.03,5.09 C84.45,92.62,82.61,96.33,79.79,98.59z M99.57,93.18c0,0.3-0.04,0.58-0.29,0.72l-9.54,5.8c-0.25,0.15-0.45,0.02-0.45-0.28v-2.46 c0-0.3,0.18-0.46,0.43-0.61l9.4-5.62c0.25-0.15,0.45-0.02,0.45,0.28V93.18z M106.13,38.09l-35.7,22.05 c-4.45,2.6-7.73,5.52-7.74,10.89v43.99c0,3.21,1.3,5.29,3.29,5.9c-0.65,0.11-1.32,0.19-1.98,0.19c-2.09,0-4.15-0.57-5.96-1.64 l-37.73-22.4c-3.69-2.19-5.98-6.28-5.98-10.67V41.6c0-4.39,2.29-8.48,5.98-10.67l37.74-22.4c1.81-1.07,3.87-1.64,5.96-1.64 s4.15,0.57,5.96,1.64l37.74,22.4c3.11,1.85,5.21,5.04,5.8,8.63C112.24,36.89,109.42,36.17,106.13,38.09z' />
  </svg>
);

const VimIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M72.6 80.5c.2.2.6.5.9.5h5.3c.3 0 .7-.3.9-.5l1.4-1.5c.2-.2.3-.4.3-.6l1.5-5.1c.1-.5 0-1-.3-1.3l-1.1-.9c-.2-.2-.6-.1-.9-.1h-4.8l-.2-.2-.1-.1c-.2 0-.4-.1-.6.1l-1.9 1.2c-.2 0-.3.5-.4.7l-1.6 4.9c-.2.5-.1 1.1.3 1.5l1.3 1.4zM73.4 106.9l-.4.1h-1.2l7.2-21.1c.2-.7-.1-1.5-.8-1.7l-.4-.1h-12.1c-.5.1-.9.5-1 1l-.7 2.5c-.2.7.3 1.3 1 1.5l.3-.1h1.8l-7.3 20.9c-.2.7.1 1.6.8 1.9l.4.3h11.2c.6 0 1.1-.5 1.3-1.1l.7-2.4c.3-.7-.1-1.5-.8-1.7zM126.5 87.2l-1.9-2.5v-.1c-.3-.3-.6-.6-1-.6h-7.2c-.4 0-.7.4-1 .6l-2 2.4h-3.1l-2.1-2.4v-.1c-.2-.3-.6-.5-1-.5h-4l20.2-20.2-22.6-22.4 20.2-20.8v-9l-2.8-3.6h-40.9l-3.3 3.5v2.9l-11.3-11.4-7.7 7.5-2.4-2.5h-40.4l-3.2 3.7v9.4l3 2.9h3v26.1l-14 14 14 14v32l5.2 2.9h11.6l9.1-9.5 21.6 21.6 14.5-14.5c.1.4.4.5.9.7l.4-.2h9.4c.6 0 1.1-.1 1.2-.6l.7-2c.2-.7-.1-1.3-.8-1.5l-.4.1h-.4l3.4-10.7 2.3-2.3h5l-5 15.9c-.2.7.2 1.1.9 1.4l.4-.2h9.1c.5 0 1-.1 1.2-.6l.8-1.8c.3-.7-.1-1.3-.7-1.6-.1-.1-.3 0-.5 0h-.4l4.2-13h6.1l-5.1 15.9c-.2.7.2 1.1.9 1.3l.4-.3h10c.5 0 1-.1 1.2-.6l.8-2c.3-.7-.1-1.3-.8-1.5-.1-.1-.3.1-.5.1h-.7l5.6-18.5c.2-.5.1-1.1-.1-1.4zm-63.8-82.3l11.3 11.3v4.7l3.4 4.1h1.6l-29 28v-28h3.3l2.7-4.2v-8.9l-.2-.3 6.9-6.7zm-59.8 59.2l12.1-12.1v24.2l-12.1-12.1zm38.9 38.3l58.4-60 21.4 21.5-20.2 20.2h-.1c-.3.1-.5.3-.7.5l-2.1 2.4h-2.9l-2.2-2.4c-.2-.3-.6-.6-1-.6h-8.8c-.6 0-1.1.4-1.3 1l-.8 2.5c-.2.7.1 1.3.8 1.6h1.5l-6.4 18.9-15.1 15.2-20.5-20.8z' />
  </svg>
);

const CppIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M117.5 33.5l.3-.2c-.6-1.1-1.5-2.1-2.4-2.6l-48.3-27.8c-.8-.5-1.9-.7-3.1-.7-1.2 0-2.3.3-3.1.7l-48 27.9c-1.7 1-2.9 3.5-2.9 5.4v55.7c0 1.1.2 2.3.9 3.4l-.2.1c.5.8 1.2 1.5 1.9 1.9l48.2 27.9c.8.5 1.9.7 3.1.7 1.2 0 2.3-.3 3.1-.7l48-27.9c1.7-1 2.9-3.5 2.9-5.4v-55.8c.1-.8 0-1.7-.4-2.6zm-35.5 32.5v-4h5v-5h5v5h5v4h-5v5h-5v-5h-5zm3.3-14c-4.2-7.5-12.2-12.5-21.3-12.5-13.5 0-24.5 11-24.5 24.5s11 24.5 24.5 24.5c9.1 0 17.1-5 21.3-12.4l12.9 7.6c-6.8 11.8-19.6 19.8-34.2 19.8-21.8 0-39.5-17.7-39.5-39.5s17.7-39.5 39.5-39.5c14.7 0 27.5 8.1 34.3 20l-13 7.5zm29.7 14h-5v5h-4v-5h-6v-4h6v-5h4v5h5v4z' />
  </svg>
);

const CIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M117.5 33.5l.3-.2c-.6-1.1-1.5-2.1-2.4-2.6l-48.3-27.8c-.8-.5-1.9-.7-3.1-.7-1.2 0-2.3.3-3.1.7l-48 27.9c-1.7 1-2.9 3.5-2.9 5.4v55.7c0 1.1.2 2.3.9 3.4l-.2.1c.5.8 1.2 1.5 1.9 1.9l48.2 27.9c.8.5 1.9.7 3.1.7 1.2 0 2.3-.3 3.1-.7l48-27.9c1.7-1 2.9-3.5 2.9-5.4v-55.8c.1-.8 0-1.7-.4-2.6zm-53.5 55c9.1 0 17.1-5 21.3-12.4l12.9 7.6c-6.8 11.8-19.6 19.8-34.2 19.8-21.8 0-39.5-17.7-39.5-39.5s17.7-39.5 39.5-39.5c14.7 0 27.5 8.1 34.3 20l-13 7.5c-4.2-7.5-12.2-12.5-21.3-12.5-13.5 0-24.5 11-24.5 24.5s11 24.5 24.5 24.5z' />
  </svg>
);

const RustIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path
      d='M62.271 10.880 C 62.082 10.990,61.289 12.128,60.508 13.409 C 58.548 16.626,58.526 16.628,55.893 13.857 C 54.180 12.055,53.766 11.725,53.214 11.729 C 52.855 11.731,52.402 11.853,52.206 12.000 C 52.011 12.147,51.458 13.317,50.978 14.600 C 49.879 17.539,49.826 17.634,49.217 17.751 C 48.842 17.822,48.120 17.420,46.389 16.177 C 45.111 15.258,43.857 14.507,43.603 14.507 C 42.549 14.507,42.252 15.083,41.750 18.100 C 41.112 21.936,41.134 21.923,37.676 20.352 C 36.280 19.719,34.956 19.200,34.733 19.200 C 34.510 19.200,34.087 19.440,33.794 19.733 C 33.262 20.266,33.261 20.268,33.406 23.201 L 33.552 26.137 32.997 26.434 C 32.505 26.697,32.166 26.665,29.988 26.150 C 27.145 25.479,26.545 25.497,25.969 26.272 L 25.548 26.838 26.113 29.259 C 26.423 30.590,26.722 31.872,26.778 32.107 C 26.833 32.341,26.738 32.716,26.566 32.939 C 26.282 33.306,25.980 33.339,23.349 33.299 C 18.896 33.229,18.643 33.611,20.483 37.627 C 21.068 38.902,21.547 40.060,21.547 40.199 C 21.547 40.933,20.962 41.200,18.449 41.610 C 17.043 41.839,15.821 42.027,15.733 42.027 C 15.645 42.027,15.381 42.219,15.147 42.453 C 14.382 43.218,14.599 43.936,16.334 46.385 C 18.495 49.435,18.491 49.446,14.921 50.812 C 10.861 52.365,10.779 52.748,13.870 55.680 C 16.749 58.410,16.752 58.370,13.493 60.419 C 11.024 61.970,10.986 62.007,10.923 62.848 C 10.847 63.871,10.865 63.889,13.813 65.690 C 16.728 67.470,16.728 67.524,13.867 70.231 C 10.790 73.141,10.885 73.566,14.948 75.099 C 18.498 76.438,18.503 76.454,16.338 79.504 C 15.111 81.233,14.720 81.953,14.720 82.487 C 14.720 83.486,15.240 83.741,18.347 84.263 C 20.964 84.704,21.547 84.963,21.547 85.685 C 21.547 85.833,21.067 87.001,20.480 88.279 C 18.654 92.256,18.862 92.587,23.184 92.587 C 27.209 92.587,27.102 92.464,26.235 96.094 C 25.581 98.830,25.571 99.354,26.163 99.945 C 26.616 100.399,27.470 100.348,30.141 99.709 C 32.181 99.222,32.539 99.188,33.012 99.441 L 33.552 99.730 33.406 102.665 C 33.261 105.599,33.262 105.601,33.794 106.134 C 34.087 106.427,34.516 106.667,34.746 106.667 C 34.976 106.667,36.300 106.151,37.689 105.520 C 41.136 103.955,41.114 103.942,41.750 107.766 C 42.254 110.797,42.548 111.360,43.624 111.360 C 43.891 111.360,45.118 110.640,46.352 109.760 C 48.519 108.214,49.081 107.972,49.658 108.339 C 49.807 108.433,50.385 109.703,50.942 111.161 C 51.761 113.305,52.061 113.863,52.517 114.081 C 53.385 114.497,53.922 114.163,55.962 111.941 C 58.425 109.258,58.526 109.271,60.537 112.530 C 62.758 116.128,63.333 116.120,65.610 112.457 C 67.572 109.301,67.549 109.303,70.201 112.073 C 71.962 113.911,72.337 114.204,72.931 114.204 C 73.310 114.204,73.763 114.062,73.936 113.888 C 74.110 113.714,74.686 112.429,75.216 111.033 C 75.746 109.636,76.295 108.420,76.437 108.330 C 76.998 107.973,77.579 108.224,79.743 109.760 C 81.017 110.665,82.216 111.360,82.501 111.360 C 83.559 111.360,83.941 110.609,84.381 107.657 C 84.757 105.140,84.833 104.899,85.328 104.648 C 85.815 104.401,86.107 104.484,88.391 105.521 C 89.780 106.151,91.104 106.667,91.334 106.667 C 91.564 106.667,92.000 106.420,92.301 106.118 L 92.850 105.570 92.699 102.755 C 92.555 100.067,92.568 99.923,92.997 99.535 C 93.438 99.136,93.483 99.138,95.949 99.701 C 98.935 100.383,99.492 100.401,100.053 99.840 C 100.601 99.292,100.595 99.172,99.845 96.009 C 99.004 92.461,98.891 92.587,102.933 92.587 C 105.688 92.587,105.995 92.548,106.346 92.161 C 106.932 91.513,106.793 90.771,105.614 88.258 C 105.019 86.992,104.536 85.840,104.540 85.698 C 104.560 84.951,105.147 84.696,107.860 84.255 C 109.520 83.986,110.762 83.674,110.987 83.471 C 111.741 82.790,111.464 81.904,109.743 79.491 C 107.586 76.467,107.595 76.438,111.049 75.165 C 115.185 73.641,115.303 73.133,112.208 70.192 C 109.341 67.468,109.340 67.483,112.480 65.555 C 116.276 63.225,116.282 62.700,112.547 60.382 C 109.335 58.389,109.337 58.417,112.216 55.683 C 115.304 52.749,115.220 52.365,111.159 50.812 C 107.575 49.441,107.564 49.407,109.742 46.418 C 111.039 44.638,111.360 44.047,111.360 43.437 C 111.360 42.371,110.882 42.132,107.738 41.624 C 105.111 41.200,104.533 40.942,104.533 40.195 C 104.533 40.053,105.013 38.910,105.600 37.653 C 106.749 35.192,106.910 34.207,106.260 33.618 C 105.911 33.302,105.443 33.257,102.939 33.298 C 100.319 33.342,99.984 33.305,99.621 32.940 C 99.224 32.541,99.228 32.485,99.848 29.898 C 100.608 26.728,100.611 26.651,99.986 26.064 C 99.352 25.468,98.956 25.478,96.045 26.163 C 93.924 26.663,93.573 26.696,93.091 26.438 L 92.544 26.145 92.695 23.219 L 92.847 20.294 92.300 19.747 C 91.999 19.446,91.572 19.200,91.350 19.200 C 91.129 19.200,89.812 19.723,88.424 20.361 C 86.106 21.428,85.857 21.499,85.356 21.237 C 84.856 20.975,84.773 20.717,84.346 18.110 C 83.853 15.094,83.548 14.507,82.477 14.507 C 82.223 14.507,80.964 15.262,79.679 16.185 C 77.569 17.701,77.286 17.844,76.760 17.661 C 76.325 17.509,76.072 17.178,75.763 16.355 C 75.534 15.749,75.096 14.581,74.788 13.760 C 74.166 12.104,73.819 11.733,72.887 11.733 C 72.367 11.733,71.896 12.107,70.208 13.860 C 67.555 16.616,67.545 16.615,65.594 13.415 C 64.814 12.136,63.999 10.994,63.782 10.878 C 63.294 10.616,62.720 10.617,62.271 10.880 M64.689 20.515 C 67.000 22.160,65.771 26.027,62.937 26.027 C 60.187 26.027,58.802 22.714,60.766 20.833 C 61.874 19.771,63.463 19.642,64.689 20.515 M61.783 30.729 C 63.298 31.305,63.920 30.959,67.379 27.625 L 69.978 25.119 71.078 25.265 C 74.528 25.723,81.390 28.737,85.333 31.526 C 88.956 34.090,93.771 39.312,95.823 42.903 L 96.262 43.672 94.318 48.052 C 93.248 50.461,92.373 52.685,92.373 52.996 C 92.373 53.713,92.843 54.847,93.296 55.222 C 93.487 55.381,95.302 56.255,97.329 57.164 L 101.013 58.818 101.158 59.755 C 101.345 60.976,101.370 63.975,101.200 64.827 L 101.067 65.493 98.964 65.493 C 96.525 65.493,96.713 65.275,96.581 68.267 C 96.485 70.436,95.961 71.635,94.769 72.411 C 92.827 73.678,89.620 73.448,88.260 71.945 C 88.051 71.714,87.645 70.553,87.357 69.364 C 86.516 65.891,85.386 63.941,83.116 62.044 C 82.399 61.445,81.813 60.886,81.813 60.801 C 81.813 60.717,82.601 60.053,83.565 59.328 C 87.075 56.682,89.093 53.602,89.315 50.551 C 89.738 44.732,85.102 39.308,78.206 37.550 C 76.571 37.133,75.873 37.120,55.646 37.120 C 44.166 37.120,34.773 37.045,34.773 36.954 C 34.773 36.739,37.324 34.263,38.827 33.021 C 42.954 29.609,48.315 26.924,53.867 25.490 L 55.787 24.993 58.515 27.759 C 60.016 29.280,61.487 30.616,61.783 30.729 M27.432 48.526 C 28.689 49.349,29.204 51.417,28.462 52.660 C 27.314 54.584,24.406 54.665,23.257 52.805 C 21.586 50.103,24.804 46.804,27.432 48.526 M101.482 48.631 C 104.770 50.636,102.222 55.568,98.702 54.011 C 96.352 52.971,96.277 49.759,98.575 48.587 C 99.534 48.098,100.636 48.115,101.482 48.631 M37.120 60.907 L 37.120 73.173 31.698 73.173 L 26.276 73.173 25.846 71.307 C 25.000 67.632,24.644 63.830,24.857 60.716 L 25.006 58.528 28.734 56.856 C 31.073 55.808,32.577 55.009,32.771 54.712 C 33.619 53.419,33.538 52.495,32.348 49.867 L 31.792 48.640 34.456 48.640 L 37.120 48.640 37.120 60.907 M68.340 49.174 C 70.662 49.778,71.889 51.007,71.892 52.730 C 71.894 53.995,71.267 54.789,69.712 55.491 C 68.611 55.989,68.436 56.001,61.493 56.069 L 54.400 56.137 54.400 52.495 L 54.400 48.853 60.755 48.853 C 65.719 48.853,67.380 48.923,68.340 49.174 M65.944 66.776 C 67.095 67.096,68.456 68.096,69.154 69.135 C 69.887 70.227,70.316 71.647,71.332 76.351 C 72.190 80.327,72.742 81.627,74.288 83.319 C 76.203 85.414,75.759 85.333,85.325 85.333 C 89.906 85.333,93.653 85.406,93.653 85.496 C 93.653 85.657,90.498 89.387,90.362 89.387 C 90.323 89.387,88.675 89.042,86.700 88.620 C 81.123 87.429,80.922 87.569,79.642 93.546 L 78.819 97.386 78.076 97.752 C 76.836 98.364,72.806 99.624,70.717 100.054 C 67.265 100.764,63.508 101.004,60.206 100.725 C 54.577 100.248,47.123 98.064,46.832 96.805 C 46.770 96.538,46.395 94.810,46.000 92.964 C 45.604 91.118,45.123 89.367,44.931 89.073 C 44.008 87.665,43.037 87.578,38.767 88.523 C 37.150 88.881,35.739 89.173,35.631 89.173 C 35.428 89.173,32.427 85.703,32.427 85.469 C 32.427 85.396,39.555 85.311,48.267 85.281 L 64.107 85.227 64.164 79.600 C 64.204 75.627,64.149 73.886,63.977 73.680 C 63.785 73.448,62.763 73.387,59.067 73.387 L 54.400 73.387 54.400 69.973 L 54.400 66.560 59.787 66.561 C 62.749 66.562,65.520 66.659,65.944 66.776 M41.536 92.365 C 44.055 93.900,42.847 97.922,39.868 97.919 C 36.813 97.917,35.681 93.932,38.284 92.344 C 39.145 91.819,40.658 91.829,41.536 92.365 M87.662 92.533 C 88.897 93.438,89.308 95.321,88.543 96.575 C 86.534 99.870,81.510 97.251,83.188 93.784 C 84.013 92.081,86.206 91.467,87.662 92.533 '
      stroke='none'
      fillRule='evenodd'
    />
  </svg>
);

const GoIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M108.2 64.8c-.1-.1-.2-.2-.4-.2l-.1-.1c-.1-.1-.2-.1-.2-.2l-.1-.1c-.1 0-.2-.1-.2-.1l-.2-.1c-.1 0-.2-.1-.2-.1l-.2-.1c-.1 0-.2-.1-.2-.1-.1 0-.1 0-.2-.1l-.3-.1c-.1 0-.1 0-.2-.1l-.3-.1h-.1l-.4-.1h-.2c-.1 0-.2 0-.3-.1h-2.3c-.6-13.3.6-26.8-2.8-39.6 12.9-4.6 2.8-22.3-8.4-14.4-7.4-6.4-17.6-7.8-28.3-7.8-10.5.7-20.4 2.9-27.4 8.4-2.8-1.4-5.5-1.8-7.9-1.1v.1c-.1 0-.3.1-.4.2-.1 0-.3.1-.4.2h-.1c-.1 0-.2.1-.4.2h-.1l-.3.2h-.1l-.3.2h-.1l-.3.2s-.1 0-.1.1l-.3.2s-.1 0-.1.1l-.3.2s-.1 0-.1.1l-.3.2-.1.1c-.1.1-.2.1-.2.2l-.1.1-.2.2-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1c.4.3.4.4.4.4v.1l-.1.3v.1c0 .1 0 .2-.1.3v3.1c0 .1 0 .2.1.3v.1l.1.3v.1l.1.3s0 .1.1.1l.1.3s0 .1.1.1l.1.3s0 .1.1.1l.2.3s0 .1.1.1l.2.3s0 .1.1.1l.2.3.1.1.3.3.3.3h.1c1 .9 2 1.6 4 2.2v-.2c-4.2 12.6-.7 25.3-.5 38.3-.6 0-.7.4-1.7.5h-.5c-.1 0-.3 0-.5.1-.1 0-.3 0-.4.1l-.4.1h-.1l-.4.1h-.1l-.3.1h-.1l-.3.1s-.1 0-.1.1l-.3.1-.2.1c-.1 0-.2.1-.2.1l-.2.1-.2.1c-.1 0-.2.1-.2.1l-.2.1-.4.3c-.1.1-.2.2-.3.2l-.4.4-.1.1c-.1.2-.3.4-.4.5l-.2.3-.3.6-.1.3v.3c0 .5.2.9.9 1.2.2 3.7 3.9 2 5.6.8l.1-.1c.2-.2.5-.3.6-.3h.1l.2-.1c.1 0 .1 0 .2-.1.2-.1.4-.1.5-.2.1 0 .1-.1.1-.2l.1-.1c.1-.2.2-.6.2-1.2l.1-1.3v1.8c-.5 13.1-4 30.7 3.3 42.5 1.3 2.1 2.9 3.9 4.7 5.4h-.5c-.2.2-.5.4-.8.6l-.9.6-.3.2-.6.4-.9.7-1.1 1c-.2.2-.3.4-.4.5l-.4.6-.2.3c-.1.2-.2.4-.2.6l-.1.3c-.2.8 0 1.7.6 2.7l.4.4h.2c.1 0 .2 0 .4.1.2.4 1.2 2.5 3.9.9 2.8-1.5 4.7-4.6 8.1-5.1l-.5-.6c5.9 2.8 12.8 4 19 4.2 8.7.3 18.6-.9 26.5-5.2 2.2.7 3.9 3.9 5.8 5.4l.1.1.1.1.1.1.1.1s.1 0 .1.1c0 0 .1 0 .1.1 0 0 .1 0 .1.1h2.1000000000000005s.1 0 .1-.1h.1s.1 0 .1-.1h.1s.1 0 .1-.1c0 0 .1 0 .1-.1l.1-.1s.1 0 .1-.1l.1-.1h.1l.2-.2.2-.1h.1l.1-.1h.1l.1-.1.1-.1.1-.1.1-.1.1-.1.1-.1.1-.1v-.1s0-.1.1-.1v-.1s0-.1.1-.1v-.1s0-.1.1-.1v-1.4000000000000001s-.3 0-.3-.1l-.3-.1v-.1l.3-.1s.2 0 .2-.1l.1-.1v-2.1000000000000005s0-.1-.1-.1v-.1s0-.1-.1-.1v-.1s0-.1-.1-.1c0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1l-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1v-.1l-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1c2-1.9 3.8-4.2 5.1-6.9 5.9-11.8 4.9-26.2 4.1-39.2h.1c.1 0 .2.1.2.1h.30000000000000004s.1 0 .1.1h.1s.1 0 .1.1l.2.1c1.7 1.2 5.4 2.9 5.6-.8 1.6.6-.3-1.8-1.3-2.5zm-72.2-41.8c-3.2-16 22.4-19 23.3-3.4.8 13-20 16.3-23.3 3.4zm36.1 15c-1.3 1.4-2.7 1.2-4.1.7 0 1.9.4 3.9.1 5.9-.5.9-1.5 1-2.3 1.4-1.2-.2-2.1-.9-2.6-2l-.2-.1c-3.9 5.2-6.3-1.1-5.2-5-1.2.1-2.2-.2-3-1.5-1.4-2.6.7-5.8 3.4-6.3.7 3 8.7 2.6 10.1-.2 3.1 1.5 6.5 4.3 3.8 7.1zm-7-17.5c-.9-13.8 20.3-17.5 23.4-4 3.5 15-20.8 18.9-23.4 4zM41.7 17c-1.9 0-3.5 1.7-3.5 3.8 0 2.1 1.6 3.8 3.5 3.8s3.5-1.7 3.5-3.8c0-2.1-1.5-3.8-3.5-3.8zm1.6 5.7c-.5 0-.8-.4-.8-1 0-.5.4-1 .8-1 .5 0 .8.4.8 1 0 .5-.3 1-.8 1zM71.1 16.1c-1.9 0-3.4 1.7-3.4 3.8 0 2.1 1.5 3.8 3.4 3.8s3.4-1.7 3.4-3.8c0-2.1-1.5-3.8-3.4-3.8zm1.6 5.6c-.4 0-.8-.4-.8-1 0-.5.4-1 .8-1s.8.4.8 1-.4 1-.8 1z' />
  </svg>
);

const HTMLIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path d='M19.569 27l8.087 89.919 36.289 9.682 36.39-9.499 8.096-90.102h-88.862zm72.041 20.471l-.507 5.834-.223 2.695h-42.569l1.017 12h40.54l-.271 2.231-2.615 28.909-.192 1.69-22.79 6.134v-.005l-.027.012-22.777-5.916-1.546-17.055h11.168l.791 8.46 12.385 3.139.006-.234v.012l12.412-2.649 1.296-13.728h-38.555l-2.734-30.836-.267-3.164h55.724000000000004l-.266 2.471zM27.956 1.627h5.622v5.556h5.144v-5.556h5.623v16.822h-5.623v-5.633h-5.143v5.633h-5.623v-16.822zM51.738 7.206h-4.95v-5.579h15.525v5.579h-4.952v11.243h-5.623v-11.243zM64.777 1.627h5.862l3.607 5.911 3.603-5.911h5.865v16.822h-5.601v-8.338l-3.867 5.981h-.098l-3.87-5.981v8.338h-5.502v-16.822zM86.513 1.627h5.624v11.262h7.907v5.561h-13.531v-16.823z' />
  </svg>
);

export const GithubIcon: React.FC<React.SVGAttributes<SVGElement>> = () => (
  <svg viewBox='0 0 128 128' fill='currentColor'>
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z'
    />
    <path d='M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm-.743-.55M28.93 94.535c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zm-.575-.618M31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm0 0M34.573 101.373c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm0 0M39.073 103.324c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm0 0M44.016 103.685c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm0 0M48.614 102.903c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0' />
  </svg>
);

export const getSVGIcon = (language: string): React.FC => {
  switch (language.toLowerCase()) {
    case 'rust':
      return RustIcon;
    case 'python':
      return PythonIcon;
    case 'go':
      return GoIcon;
    case 'haskell':
      return HaskellIcon;
    case 'typescript':
      return TypescriptIcon;
    case 'vim script':
      return VimIcon;
    case 'c':
      return CIcon;
    case 'c++':
      return CppIcon;
    case 'html':
      return HTMLIcon;
    case 'shell':
      return BashIcon;
    default:
      return () => null;
  }
};

export const sanitizeRepoData = (data: GithubGraphqlData): GithubRepository[] =>
  data.github.user.repositories.nodes.map(({ languages, ...node }) => ({
    ...node,
    languages: languages.nodes.map((n) => n.name),
  }));
